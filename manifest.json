{
  "source_base_path": "C:/Projects/Shell/DocCode/testdocfx",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      }
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/SampleAPI.Controllers.WeatherForecastController.yml",
      "output": {
        ".html": {
          "relative_path": "api/SampleAPI.Controllers.WeatherForecastController.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/SampleAPI.Controllers.yml",
      "output": {
        ".html": {
          "relative_path": "api/SampleAPI.Controllers.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/SampleAPI.WeatherForecast.yml",
      "output": {
        ".html": {
          "relative_path": "api/SampleAPI.WeatherForecast.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/SampleAPI.yml",
      "output": {
        ".html": {
          "relative_path": "api/SampleAPI.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html"
        },
        ".json": {
          "relative_path": "api/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/administration.md",
      "output": {
        ".html": {
          "relative_path": "docs/administration.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/architecture.md",
      "output": {
        ".html": {
          "relative_path": "docs/architecture.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/features/featuresservices.md",
      "output": {
        ".html": {
          "relative_path": "docs/features/featuresservices.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/features/levels/sample1/sample1.md",
      "output": {
        ".html": {
          "relative_path": "docs/features/levels/sample1/sample1.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/features/levels/sample1/subinfo1.md",
      "output": {
        ".html": {
          "relative_path": "docs/features/levels/sample1/subinfo1.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/features/levels/sample2.md",
      "output": {
        ".html": {
          "relative_path": "docs/features/levels/sample2.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/features/levels/sample3.md",
      "output": {
        ".html": {
          "relative_path": "docs/features/levels/sample3.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/index.md",
      "output": {
        ".html": {
          "relative_path": "docs/index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "docs/toc.yml",
      "output": {
        ".html": {
          "relative_path": "docs/toc.html"
        },
        ".json": {
          "relative_path": "docs/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html"
        },
        ".json": {
          "relative_path": "toc.json"
        }
      },
      "version": ""
    }
  ],
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}